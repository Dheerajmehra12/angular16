{
  "name": "my-learnings",
  "version": "0.0.0",
  "scripts": {
    "css:compile-theme": "node-sass --output-style expanded --source-map true --source-map-contents true --precision 6 ./src/scss/theme.scss ./src/css/theme.css",
    "css:compile-styles": "node-sass --output-style expanded --source-map true --source-map-contents true --precision 6 ./src/scss/styles/theme-styles.scss ./src/css/styles/style.css",
    "css:compile": "run-s css:compile-*",
    "css:minify-theme": "cleancss --with-rebase -O1 --source-map --source-map-inline-sources -o ./src/css/theme.min.css  ./src/css/theme.css",
    "css:minify-styles": "cleancss --with-rebase -O1 --source-map --source-map-inline-sources -o ./src/css/styles/style.min.css   ./src/css/styles/style.css",
    "css:minify": "run-p css:minify-*",
    "css": "run-s css:compile css:minify",
    "copy:resources": "run-s filecopy:*",
    "filecopy:bootstrap-icons": "cpx ./node_modules/bootstrap-icons/bootstrap-icons.svg ./src/css/",
    "ng": "ng",
    "watch-css": "nodemon --watch src/scss/ --ext scss --exec 'run-s css'",
    "watch-ui": "ng build --watch --configuration=development",
    "build-ui": "ng build --configuration=${ENV}",
    "watch": "run-p watch-ui",
    "configure": "dotenv -e src/server/environment/${ENV}.env run-s create-* config-*",
    "prestart": "npm install",
    "create-css-dir": "shx mkdir -p src/css",
    "create-js-dir": "shx mkdir -p src/js",
    "create-logs-dir": "shx mkdir -p logs",
    "run-server": "nodemon --watch src/server ./server.js",
    "start-server": "run-p run-server open-browser",
    "start": "run-s clean configure build start-server:watch",
    "start-server:watch": "run-p start-server watch",
    "deploy": "npm install && run-s clean configure build build-ui && forever stop server.js; forever start server.js",
    "config-appConfig": "shx sed s/{ENV}/${ENV}/g ./src/libenv/appConfig.js | sed s/{API_HOST}/${API_HOST}/g | sed s/{API_HOST_PORT}/${API_HOST_PORT}/g | sed s/{CURRENCY_SYMBOL_DEFAULT}/${CURRENCY_SYMBOL_DEFAULT}/g | sed s/{CURRENCY_DEFAULT}/${CURRENCY_DEFAULT}/g | sed s/{HOME_COUNTRY}/${HOME_COUNTRY}/g | sed s/{APP_NAME}/${APP_NAME}/g | sed s/{APP_NAME_DISPLAY}/${APP_NAME_DISPLAY}/g |  sed s/{SWITCH_APP_URL}/${SWITCH_APP_URL}/g> ./src/js/appConfig.js",
    "open-browser": "open-cli $(shx echo \"http://localhost:`dotenv -e src/server/environment/${ENV}.env -p LISTEN_PORT`/\")",
    "clean": "del-cli --force ./dist ./build ./src/css ./src/js",
    "build": "run-s copy:resources",
    "test": "ng test"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^16.2.0",
    "@angular/common": "^16.2.0",
    "@angular/compiler": "^16.2.0",
    "@angular/core": "^16.2.0",
    "@angular/forms": "^16.2.0",
    "@angular/platform-browser": "^16.2.0",
    "@angular/platform-browser-dynamic": "^16.2.0",
    "@angular/router": "^16.2.0",
    "@popperjs/core": "^2.11.8",
    "body-parser": "^1.20.2",
    "bootstrap": "^5.3.2",
    "bootstrap-icons": "^1.10.5",
    "cheerio": "^1.0.0-rc.12",
    "cors": "^2.8.5",
    "cpx": "^1.5.0",
    "express": "^4.18.2",
    "mongodb": "^6.0.0",
    "mongoose": "^7.5.0",
    "puppeteer": "^21.1.1",
    "rxjs": "~7.8.0",
    "tslib": "^2.3.0",
    "zone.js": "~0.13.0"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^16.2.0",
    "@angular/cli": "~16.2.0",
    "@angular/compiler-cli": "^16.2.0",
    "@types/jasmine": "~4.3.0",
    "clean-css-cli": "^5.6.2",
    "cpy-cli": "^5.0.0",
    "del-cli": "^5.0.1",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.3.0",
    "jasmine-core": "~4.6.0",
    "karma": "~6.4.0",
    "karma-chrome-launcher": "~3.2.0",
    "karma-coverage": "~2.2.0",
    "karma-jasmine": "~5.1.0",
    "karma-jasmine-html-reporter": "~2.1.0",
    "node-sass": "^9.0.0",
    "nodemon": "^3.0.1",
    "npm-run-all": "^4.1.5",
    "open-cli": "^7.2.0",
    "pug": "^3.0.2",
    "shx": "^0.3.4",
    "typescript": "~5.1.3"
  }
}
